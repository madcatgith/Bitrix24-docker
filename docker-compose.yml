version: '2'

services:
  traefik:
    image: traefik:latest
    volumes:
      - ./traefik.yml:/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - default

  memcache:
    image: memcached:alpine
    container_name: bx-memcache
    restart: always
    networks:
      bx:
        aliases:
          - memcache

  mail-mailhog:
    image: "cd2team/mailhog:latest"
    ports:
      # SMTP Port:
      - 1025:1025
      # Webinterface Port:
      - 8025:8025
    environment:
        MH_STORAGE: maildir
        MH_MAILDIR_PATH: /tmp
    volumes:
        - ${BX_MAIL_PATH}:/tmp
    restart: unless-stopped
    stdin_open: false
    tty: false
    networks:
      bx:
        aliases:
          - mailhog

  redis:
    build: ./redis
    container_name: bxRedis
    volumes:
        - ${BX_LOGS_PATH}/redis:/var/log/redis
    networks:
      bx:
        aliases:
          - redis

#  pub:
#    build: ./push
#    container_name: bxPushPub
#    env_file:
#      - .bitrix.env
#    environment:
#      - PUSHROLE=pub
#    volumes:
#      - ${BX_LOGS_PATH}/push-server:/var/log/push-server
#    depends_on:
#      - redis
#    restart: always
#    networks:
#      bx:
#        aliases:
#          - pub

#  sub:
#    build: ./push
#    container_name: bxPushSub
#    env_file:
#      - .bitrix.env
#    environment:
#      - PUSHROLE=sub
#    volumes:
#      - ${BX_LOGS_PATH}/push-server:/var/log/push-server
#    depends_on:
#      - redis
#    restart: always
#    networks:
#      bx:
#        aliases:
#          - sub

  push-server-sub:
    image: ikarpovich/bitrix-push-server
    links:
      - redis
    networks:
      - bx
      - default
    environment:
      - REDIS_HOST=redis
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=80
      - SECURITY_KEY=EnuC6UFy3XIAvHDVXT4fketNANK1yfP65MaehStsNqyd9wVxSeFqt2sAQK9Tm3ECuUu2FmjlENoUtmZRiB5KzhOz3LLonOKKdzG6CvXCMDFg0ZPFRQzJfUlw88PE0l4n
      - MODE=sub
    restart: unless-stopped
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-dev2.rule=Host(`bitrix24-sub.docker.localhost`)"
      - "traefik.http.services.nginx-dev2.loadbalancer.server.port=80"
      #- "traefik.http.routers.nginx-dev2.tls=true"
      - "traefik.docker.network=traefik-net"

  push-server-pub:
    image: ikarpovich/bitrix-push-server
    links:
      - redis
    networks:
      bx:
        aliases:
          - push-server-pub
    environment:
      - REDIS_HOST=redis
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=80
      - SECURITY_KEY=EnuC6UFy3XIAvHDVXT4fketNANK1yfP65MaehStsNqyd9wVxSeFqt2sAQK9Tm3ECuUu2FmjlENoUtmZRiB5KzhOz3LLonOKKdzG6CvXCMDFg0ZPFRQzJfUlw88PE0l4n
      - MODE=pub
    restart: unless-stopped

  mysql:
    image: 'mariadb'
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=+Tr+()8]!szl[HQIsoT5 --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    ports:
      - "3306:3306"
      
    volumes:
    - ${BX_MYSQL_PATH}:/var/lib/mysql
    - ${BX_LOGS_PATH}/mysql:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: +Tr+()8]!szl[HQIsoT5
      MYSQL_DATABASE: sitemanager
      MYSQL_USER: bitrix
      MYSQL_PASSWORD: +Tr+()8]!szl[HQIsoT5
    command: ['--character-set-server=utf8', '--collation-server=utf8_unicode_ci', '--skip-character-set-client-handshake', '--sql-mode=']
    networks:
      bx:
        aliases:
          - mysql

  phpmyadmin:
    image: phpmyadmin
    links:
      - mysql:mysql
    ports:
      - 8181:80
    environment:
      PMA_HOST: mysql
      MYSQL_USERNAME: bitrix
      MYSQL_PASSWORD: +Tr+()8]!szl[HQIsoT5
    networks:
      bx:
        aliases:
          - mysql

  php-fpm:
    build:
      context: ./php${BX_PHP_VERSION}
      args:
        - BX_XDEBUG_IP=${BX_XDEBUG_IP}
        - BX_XDEBUG_PORT=${BX_XDEBUG_PORT}
        - BX_DEFAULT_CHARSET=${BX_DEFAULT_CHARSET}
        - CONTAINER_UID=${BX_CONTAINER_UID}
        - CONTAINER_GID=${BX_CONTAINER_GID}
        - CONTAINER_USER=bx
        - CONTAINER_GROUP=bx 
    container_name: bx-php-fpm
    restart: always
    environment:
      - CONTAINER_UID=${BX_CONTAINER_UID}
      - CONTAINER_GID=${BX_CONTAINER_GID}
      - CONTAINER_USER=bx
      - CONTAINER_GROUP=bx
    volumes:
      - ${BX_LOGS_PATH}/php-fpm:/var/log/php-fpm
      - ${BX_PUBLIC_HTML_PATH}:/var/www/public_html
      - ${BX_MODULES_PATH}:/media/bitrix/modules
      - ./var/www/.bx_temp/sitemanager:/home/bitrix/.bx_temp/sitemanager
    extra_hosts:
      - ${BX_UPDATE_HOST}
    networks:
      bx:
        aliases:
          - php-fpm
      default:

  nginx:
    build:
      context: ./nginx
      args:
        - CONTAINER_UID=${BX_CONTAINER_UID}
        - CONTAINER_GID=${BX_CONTAINER_GID}
        - CONTAINER_USER=bx
        - CONTAINER_GROUP=bx
#    ports:
#      - ${BX_HTTP_PORT}:80
#      - ${BX_HTTPS_PORT}:443
    container_name: bx-nginx
    restart: always
    environment:
      - BX_DEFAULT_HOST=${BX_DEFAULT_HOST}
      - BX_DEFAULT_LOCAL_DOMAIN=${BX_DEFAULT_LOCAL_DOMAIN}
      - BX_HOST_AUTOCREATE=${BX_HOST_AUTOCREATE}
      - CONTAINER_UID=${BX_CONTAINER_UID}
      - CONTAINER_GID=${BX_CONTAINER_GID}
      - CONTAINER_USER=bx
      - CONTAINER_GROUP=bx
    volumes:
      - ${BX_LOGS_PATH}/nginx:/var/log/nginx
      - ${BX_PUBLIC_HTML_PATH}:/var/www/public_html
      - ${BX_MODULES_PATH}:/media/bitrix/modules
      - ./var/www/.bx_temp/sitemanager:/home/bitrix/.bx_temp/sitemanager
    depends_on:
      - push-server-sub
      - push-server-pub
      - traefik
    networks:
      bx:
        aliases:
          - nginx
          - ${BX_DEFAULT_HOST} #Для работы проверки сокета!!!
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-dev1.rule=Host(`${BX_DEFAULT_HOST}`)"
      - "traefik.http.services.nginx-dev1.loadbalancer.server.port=80"
      #- "traefik.http.routers.nginx-dev1.tls=true"
      - "traefik.docker.network=traefik-net"


  cronjobber:
    image: docker:edge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: cronjobber

    command: >
        sh -c "
        echo '* * * * * docker exec bx-php-fpm php -f /var/www/public_html/bitrix/modules/main/tools/cron_events.php' > /etc/crontabs/root
        && crond -f"

    networks:
      bx:


networks:
  default:
    external:
      name: traefik-net
  bx:
    driver: bridge

volumes:
  mysql-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BX_MYSQL_PATH}
  bx-modules:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BX_MODULES_PATH}
  bx-public:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BX_PUBLIC_HTML_PATH}